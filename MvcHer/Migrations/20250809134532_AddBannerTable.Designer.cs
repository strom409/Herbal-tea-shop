// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcHer.Data;

#nullable disable

namespace MvcHer.Migrations
{
    [DbContext(typeof(TeaShopDbContext))]
    [Migration("20250809134532_AddBannerTable")]
    partial class AddBannerTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MvcHer.Models.AboutUs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Awards")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Certifications")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("CountriesServed")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FounderImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FounderMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FounderName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FounderTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("HappyCustomers")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Mission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subtitle")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("TeaVarieties")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AboutUs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Awards = "Best Tea Retailer 2023, Organic Certification Excellence Award 2022, Customer Choice Award 2021",
                            Certifications = "Organic Certified, Fair Trade Certified, ISO 22000 Food Safety, HACCP Certified",
                            CountriesServed = 35,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "At Herbal Tea, we believe that every cup tells a story. Our journey began with a simple mission: to bring the finest, most authentic tea experiences directly to your doorstep. We source our premium teas from the world's most renowned tea gardens, ensuring that each blend captures the essence of its origin while delivering unparalleled quality and flavor.",
                            FounderImageUrl = "~/img/founder.jpg",
                            FounderMessage = "My passion for tea began during my travels across the tea gardens of Assam and Darjeeling. I witnessed firsthand the dedication of tea artisans who have perfected their craft over generations. This inspired me to create Herbal Tea - a bridge between these master craftsmen and tea lovers worldwide. Every blend we offer is a testament to this commitment to excellence.",
                            FounderName = "Rajesh Kumar",
                            FounderTitle = "Founder & Master Tea Curator",
                            HappyCustomers = 25000,
                            ImageUrl = "~/img/about-hero.jpg",
                            IsActive = true,
                            Mission = "To deliver the world's finest teas while supporting sustainable farming practices and empowering tea communities. We are committed to bringing authentic, premium tea experiences that connect people with the rich heritage and culture of tea.",
                            Subtitle = "Crafting exceptional tea experiences since 2010 with passion, quality, and tradition",
                            TeaVarieties = 150,
                            Title = "Welcome to Herbal Tea - Your Premium Tea Destination",
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Values = "Quality First: We never compromise on the quality of our teas. Sustainability: We support eco-friendly farming practices. Authenticity: Every tea tells its authentic story. Customer Focus: Your satisfaction is our priority. Community: We believe in giving back to tea-growing communities.",
                            Vision = "To become the global leader in premium tea retail, recognized for our commitment to quality, sustainability, and customer satisfaction. We envision a world where every tea lover has access to exceptional teas that inspire moments of peace and connection.",
                            YearsOfExperience = 14
                        });
                });

            modelBuilder.Entity("MvcHer.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@herbal-tea.com",
                            FirstName = "System",
                            IsActive = true,
                            LastName = "Administrator",
                            PasswordHash = "$2a$11$K8C1Lhqz7Q2d.5wjwMqBdOXnDlHkVGWyBjKr5o8FqU2YvMqBdOXnDl",
                            Role = "SuperAdmin",
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("MvcHer.Models.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ButtonText")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ButtonUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DisplayOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Subtitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("MvcHer.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("CustomerId", "ProductId")
                        .IsUnique();

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("MvcHer.Models.ContactMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminResponse")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ResponseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecondaryEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SecondaryPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ContactMessages");
                });

            modelBuilder.Entity("MvcHer.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main Street",
                            City = "New York",
                            Country = "USA",
                            CreatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2498),
                            Email = "john.smith@email.com",
                            FirstName = "John",
                            LastName = "Smith",
                            PhoneNumber = "+1-555-0123",
                            State = "NY",
                            UpdatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2500),
                            ZipCode = "10001"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak Avenue",
                            City = "Los Angeles",
                            Country = "USA",
                            CreatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2507),
                            Email = "sarah.johnson@email.com",
                            FirstName = "Sarah",
                            LastName = "Johnson",
                            PhoneNumber = "+1-555-0124",
                            State = "CA",
                            UpdatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2508),
                            ZipCode = "90210"
                        });
                });

            modelBuilder.Entity("MvcHer.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeliveredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ShippingCity")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShippingCountry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShippingState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShippingZipCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MvcHer.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("MvcHer.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SKU")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Green Tea",
                            CreatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2389),
                            Description = "Premium quality green tea with natural antioxidants and health benefits. Sourced from the finest tea gardens.",
                            ImageUrl = "~/img/product-1.jpg",
                            IsActive = true,
                            Name = "Premium Green Tea",
                            Price = 15.00m,
                            SKU = "GT001",
                            StockQuantity = 45,
                            UpdatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2390)
                        },
                        new
                        {
                            Id = 2,
                            Category = "Black Tea",
                            CreatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2397),
                            Description = "Rich and robust black tea with full-bodied flavor and aromatic bergamot oil.",
                            ImageUrl = "~/img/product-2.jpg",
                            IsActive = true,
                            Name = "Earl Grey Black Tea",
                            Price = 18.00m,
                            SKU = "BT001",
                            StockQuantity = 32,
                            UpdatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2398)
                        },
                        new
                        {
                            Id = 3,
                            Category = "Spiced Tea",
                            CreatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2402),
                            Description = "Aromatic blend of traditional spices and tea for a warming and invigorating experience.",
                            ImageUrl = "~/img/product-3.jpg",
                            IsActive = true,
                            Name = "Chai Spiced Tea",
                            Price = 20.00m,
                            SKU = "ST001",
                            StockQuantity = 28,
                            UpdatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2403)
                        },
                        new
                        {
                            Id = 4,
                            Category = "Organic Tea",
                            CreatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2407),
                            Description = "Certified organic herbal tea grown without pesticides or chemicals. Pure and natural.",
                            ImageUrl = "~/img/product-4.jpg",
                            IsActive = true,
                            Name = "Organic Herbal Tea",
                            Price = 22.00m,
                            SKU = "OT001",
                            StockQuantity = 15,
                            UpdatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2408)
                        },
                        new
                        {
                            Id = 5,
                            Category = "Herbal Tea",
                            CreatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2412),
                            Description = "Relaxing chamomile tea perfect for evening consumption and better sleep quality.",
                            ImageUrl = "~/img/store-product-2.jpg",
                            IsActive = true,
                            Name = "Chamomile Herbal Tea",
                            Price = 16.00m,
                            SKU = "HT001",
                            StockQuantity = 38,
                            UpdatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2413)
                        },
                        new
                        {
                            Id = 6,
                            Category = "Green Tea",
                            CreatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2418),
                            Description = "Fragrant jasmine green tea with delicate floral notes and refreshing taste.",
                            ImageUrl = "~/img/store-product-3.jpg",
                            IsActive = true,
                            Name = "Jasmine Green Tea",
                            Price = 24.00m,
                            SKU = "GT002",
                            StockQuantity = 22,
                            UpdatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2419)
                        });
                });

            modelBuilder.Entity("MvcHer.Models.SocialLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DisplayOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("IconClass")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("SocialLinks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "#1877F2",
                            CreatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2871),
                            DisplayName = "Herbal Tea Facebook",
                            DisplayOrder = 1,
                            IconClass = "fab fa-facebook-f",
                            IsActive = true,
                            Platform = "Facebook",
                            UpdatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2872),
                            Url = "https://facebook.com/herbaltea"
                        },
                        new
                        {
                            Id = 2,
                            Color = "#1DA1F2",
                            CreatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2987),
                            DisplayName = "Herbal Tea Twitter",
                            DisplayOrder = 2,
                            IconClass = "fab fa-twitter",
                            IsActive = true,
                            Platform = "Twitter",
                            UpdatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2989),
                            Url = "https://twitter.com/herbaltea"
                        },
                        new
                        {
                            Id = 3,
                            Color = "#E4405F",
                            CreatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2998),
                            DisplayName = "Herbal Tea Instagram",
                            DisplayOrder = 3,
                            IconClass = "fab fa-instagram",
                            IsActive = true,
                            Platform = "Instagram",
                            UpdatedAt = new DateTime(2025, 8, 9, 13, 45, 28, 607, DateTimeKind.Utc).AddTicks(2999),
                            Url = "https://instagram.com/herbaltea"
                        });
                });

            modelBuilder.Entity("MvcHer.Models.Testimonial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminNotes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientCompany")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ClientImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ClientLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ClientProfession")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsApproved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsFeatured")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("TestimonialText")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Testimonials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientCompany = "Johnson & Associates",
                            ClientImageUrl = "~/img/testimonial-1.jpg",
                            ClientLocation = "New York, USA",
                            ClientName = "Sarah Johnson",
                            ClientProfession = "Tea Enthusiast",
                            CreatedAt = new DateTime(2024, 10, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsApproved = true,
                            IsFeatured = true,
                            Rating = 5,
                            TestimonialText = "The quality of tea from Herbal Tea is absolutely exceptional! Every cup is a journey of flavors that awakens my senses. Their Earl Grey has become my daily ritual, and I can't imagine starting my morning without it.",
                            UpdatedAt = new DateTime(2024, 10, 15, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            ClientCompany = "Golden Dragon Restaurant",
                            ClientImageUrl = "~/img/testimonial-2.jpg",
                            ClientLocation = "San Francisco, USA",
                            ClientName = "Michael Chen",
                            ClientProfession = "Restaurant Owner",
                            CreatedAt = new DateTime(2024, 11, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsApproved = true,
                            IsFeatured = true,
                            Rating = 5,
                            TestimonialText = "As a restaurant owner, I serve Herbal Tea's premium blends to my customers, and they absolutely love them! The consistency in quality and the rich, authentic flavors have made our tea service a highlight of the dining experience.",
                            UpdatedAt = new DateTime(2024, 11, 2, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            ClientCompany = "Wellness First Coaching",
                            ClientImageUrl = "~/img/testimonial-3.jpg",
                            ClientLocation = "Los Angeles, USA",
                            ClientName = "Emma Williams",
                            ClientProfession = "Wellness Coach",
                            CreatedAt = new DateTime(2024, 11, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsApproved = true,
                            IsFeatured = true,
                            Rating = 5,
                            TestimonialText = "I recommend Herbal Tea to all my clients seeking natural wellness solutions. Their organic herbal blends are pure, potent, and perfectly crafted. The chamomile tea has helped many of my clients achieve better sleep quality.",
                            UpdatedAt = new DateTime(2024, 11, 20, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            ClientCompany = "TechCorp Industries",
                            ClientImageUrl = "~/img/testimonial-4.jpg",
                            ClientLocation = "Seattle, USA",
                            ClientName = "David Kumar",
                            ClientProfession = "Corporate Executive",
                            CreatedAt = new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsApproved = true,
                            IsFeatured = false,
                            Rating = 5,
                            TestimonialText = "Working long hours in the corporate world, I need something that helps me stay focused and energized. Herbal Tea's green tea collection has become my secret weapon for maintaining productivity while enjoying moments of calm.",
                            UpdatedAt = new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            ClientCompany = "Zen Yoga Studio",
                            ClientImageUrl = "~/img/testimonial-5.jpg",
                            ClientLocation = "Portland, USA",
                            ClientName = "Lisa Thompson",
                            ClientProfession = "Yoga Instructor",
                            CreatedAt = new DateTime(2024, 12, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsApproved = true,
                            IsFeatured = false,
                            Rating = 5,
                            TestimonialText = "The mindful experience of drinking Herbal Tea perfectly complements my yoga practice. Each sip brings tranquility and balance. I especially love their jasmine green tea - it's like meditation in a cup!",
                            UpdatedAt = new DateTime(2024, 12, 18, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("MvcHer.Models.CartItem", b =>
                {
                    b.HasOne("MvcHer.Models.Customer", "Customer")
                        .WithMany("CartItems")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcHer.Models.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MvcHer.Models.Order", b =>
                {
                    b.HasOne("MvcHer.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MvcHer.Models.OrderItem", b =>
                {
                    b.HasOne("MvcHer.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcHer.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MvcHer.Models.Customer", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("MvcHer.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("MvcHer.Models.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
