// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcHer.Data;

#nullable disable

namespace MvcHer.Migrations
{
    [DbContext(typeof(TeaShopDbContext))]
    [Migration("20250808053228_AddContactMessages")]
    partial class AddContactMessages
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MvcHer.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@herbal-tea.com",
                            FirstName = "System",
                            IsActive = true,
                            LastName = "Administrator",
                            PasswordHash = "$2a$11$K8C1Lhqz7Q2d.5wjwMqBdOXnDlHkVGWyBjKr5o8FqU2YvMqBdOXnDl",
                            Role = "SuperAdmin",
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("MvcHer.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("CustomerId", "ProductId")
                        .IsUnique();

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("MvcHer.Models.ContactMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminResponse")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ResponseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ContactMessages");
                });

            modelBuilder.Entity("MvcHer.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main Street",
                            City = "New York",
                            Country = "USA",
                            CreatedAt = new DateTime(2025, 8, 8, 5, 32, 25, 248, DateTimeKind.Utc).AddTicks(48),
                            Email = "john.smith@email.com",
                            FirstName = "John",
                            LastName = "Smith",
                            PhoneNumber = "+1-555-0123",
                            State = "NY",
                            UpdatedAt = new DateTime(2025, 8, 8, 5, 32, 25, 248, DateTimeKind.Utc).AddTicks(50),
                            ZipCode = "10001"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak Avenue",
                            City = "Los Angeles",
                            Country = "USA",
                            CreatedAt = new DateTime(2025, 8, 8, 5, 32, 25, 248, DateTimeKind.Utc).AddTicks(57),
                            Email = "sarah.johnson@email.com",
                            FirstName = "Sarah",
                            LastName = "Johnson",
                            PhoneNumber = "+1-555-0124",
                            State = "CA",
                            UpdatedAt = new DateTime(2025, 8, 8, 5, 32, 25, 248, DateTimeKind.Utc).AddTicks(58),
                            ZipCode = "90210"
                        });
                });

            modelBuilder.Entity("MvcHer.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeliveredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ShippingCity")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShippingCountry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShippingState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShippingZipCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MvcHer.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("MvcHer.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SKU")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Green Tea",
                            CreatedAt = new DateTime(2025, 8, 8, 5, 32, 25, 247, DateTimeKind.Utc).AddTicks(9913),
                            Description = "Premium quality green tea with natural antioxidants and health benefits. Sourced from the finest tea gardens.",
                            ImageUrl = "~/img/product-1.jpg",
                            IsActive = true,
                            Name = "Premium Green Tea",
                            Price = 15.00m,
                            SKU = "GT001",
                            StockQuantity = 45,
                            UpdatedAt = new DateTime(2025, 8, 8, 5, 32, 25, 247, DateTimeKind.Utc).AddTicks(9914)
                        },
                        new
                        {
                            Id = 2,
                            Category = "Black Tea",
                            CreatedAt = new DateTime(2025, 8, 8, 5, 32, 25, 247, DateTimeKind.Utc).AddTicks(9922),
                            Description = "Rich and robust black tea with full-bodied flavor and aromatic bergamot oil.",
                            ImageUrl = "~/img/product-2.jpg",
                            IsActive = true,
                            Name = "Earl Grey Black Tea",
                            Price = 18.00m,
                            SKU = "BT001",
                            StockQuantity = 32,
                            UpdatedAt = new DateTime(2025, 8, 8, 5, 32, 25, 247, DateTimeKind.Utc).AddTicks(9923)
                        },
                        new
                        {
                            Id = 3,
                            Category = "Spiced Tea",
                            CreatedAt = new DateTime(2025, 8, 8, 5, 32, 25, 247, DateTimeKind.Utc).AddTicks(9929),
                            Description = "Aromatic blend of traditional spices and tea for a warming and invigorating experience.",
                            ImageUrl = "~/img/product-3.jpg",
                            IsActive = true,
                            Name = "Chai Spiced Tea",
                            Price = 20.00m,
                            SKU = "ST001",
                            StockQuantity = 28,
                            UpdatedAt = new DateTime(2025, 8, 8, 5, 32, 25, 247, DateTimeKind.Utc).AddTicks(9930)
                        },
                        new
                        {
                            Id = 4,
                            Category = "Organic Tea",
                            CreatedAt = new DateTime(2025, 8, 8, 5, 32, 25, 247, DateTimeKind.Utc).AddTicks(9935),
                            Description = "Certified organic herbal tea grown without pesticides or chemicals. Pure and natural.",
                            ImageUrl = "~/img/product-4.jpg",
                            IsActive = true,
                            Name = "Organic Herbal Tea",
                            Price = 22.00m,
                            SKU = "OT001",
                            StockQuantity = 15,
                            UpdatedAt = new DateTime(2025, 8, 8, 5, 32, 25, 247, DateTimeKind.Utc).AddTicks(9936)
                        },
                        new
                        {
                            Id = 5,
                            Category = "Herbal Tea",
                            CreatedAt = new DateTime(2025, 8, 8, 5, 32, 25, 247, DateTimeKind.Utc).AddTicks(9941),
                            Description = "Relaxing chamomile tea perfect for evening consumption and better sleep quality.",
                            ImageUrl = "~/img/store-product-2.jpg",
                            IsActive = true,
                            Name = "Chamomile Herbal Tea",
                            Price = 16.00m,
                            SKU = "HT001",
                            StockQuantity = 38,
                            UpdatedAt = new DateTime(2025, 8, 8, 5, 32, 25, 247, DateTimeKind.Utc).AddTicks(9942)
                        },
                        new
                        {
                            Id = 6,
                            Category = "Green Tea",
                            CreatedAt = new DateTime(2025, 8, 8, 5, 32, 25, 247, DateTimeKind.Utc).AddTicks(9947),
                            Description = "Fragrant jasmine green tea with delicate floral notes and refreshing taste.",
                            ImageUrl = "~/img/store-product-3.jpg",
                            IsActive = true,
                            Name = "Jasmine Green Tea",
                            Price = 24.00m,
                            SKU = "GT002",
                            StockQuantity = 22,
                            UpdatedAt = new DateTime(2025, 8, 8, 5, 32, 25, 247, DateTimeKind.Utc).AddTicks(9948)
                        });
                });

            modelBuilder.Entity("MvcHer.Models.CartItem", b =>
                {
                    b.HasOne("MvcHer.Models.Customer", "Customer")
                        .WithMany("CartItems")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcHer.Models.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MvcHer.Models.Order", b =>
                {
                    b.HasOne("MvcHer.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MvcHer.Models.OrderItem", b =>
                {
                    b.HasOne("MvcHer.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcHer.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MvcHer.Models.Customer", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("MvcHer.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("MvcHer.Models.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
