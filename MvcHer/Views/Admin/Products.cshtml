@model IEnumerable<MvcHer.Models.Product>

@{
    ViewData["Title"] = "Product Management";
    Layout = "_AdminLayout";
}

<style>
    /* Responsive Products Styles */
    @@media (max-width: 991.98px) {
        .btn-toolbar {
            flex-direction: column;
            gap: 0.5rem;
        }
        
        .btn-toolbar .btn {
            width: 100%;
            margin-bottom: 0.25rem;
        }
        
        .btn-group {
            flex-wrap: wrap;
            gap: 0.25rem;
        }
        
        .btn-group .btn {
            flex: 1;
            min-width: auto;
        }
    }
    
    @@media (max-width: 767.98px) {
        .d-flex.justify-content-between {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
        }
        
        .h2 {
            font-size: 1.5rem;
        }
        
        .table-responsive {
            font-size: 0.875rem;
        }
        
        .table th, .table td {
            padding: 0.5rem 0.25rem;
        }
        
        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
        }
        
        .badge {
            font-size: 0.7rem;
        }
    }
    
    @@media (max-width: 575.98px) {
        .card-body {
            padding: 1rem;
        }
        
        .table-responsive {
            font-size: 0.8rem;
        }
        
        .table th, .table td {
            padding: 0.375rem 0.125rem;
        }
        
        .btn-sm {
            padding: 0.2rem 0.4rem;
            font-size: 0.7rem;
        }
        
        .btn-sm i {
            font-size: 0.8rem;
        }
        
        .product-image {
            width: 40px !important;
            height: 40px !important;
        }
    }
    
    /* Product image responsive */
    .product-image {
        transition: transform 0.2s ease;
    }
    
    .product-image:hover {
        transform: scale(1.1);
    }
    
    /* Action buttons responsive */
    .action-buttons {
        display: flex;
        gap: 0.25rem;
        flex-wrap: wrap;
    }
    
    @@media (max-width: 575.98px) {
        .action-buttons {
            flex-direction: column;
            gap: 0.125rem;
        }
        
        .action-buttons .btn {
            width: 100%;
            margin: 0;
        }
    }
</style>

<!-- Success/Error Messages -->
@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i>@TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i>@TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Products Header -->
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <div>
        <h1 class="h2"><i class="fas fa-leaf me-2"></i>Product Management</h1>
        <div class="btn-group mt-2" role="group" aria-label="Product Filter">
            <a href="@Url.Action("Products", new { filter = "active" })" 
               class="btn btn-sm @(ViewBag.CurrentFilter == "active" ? "btn-success" : "btn-outline-success")">
                <i class="fas fa-check-circle me-1"></i>Active Only (@ViewBag.ActiveCount)
            </a>
            <a href="@Url.Action("Products", new { filter = "all" })" 
               class="btn btn-sm @(ViewBag.CurrentFilter == "all" ? "btn-info" : "btn-outline-info")">
                <i class="fas fa-list me-1"></i>All Products (@ViewBag.TotalCount)
            </a>
        </div>
    </div>
    <div class="btn-toolbar mb-2 mb-md-0">
        
        <a href="@Url.Action("AddProduct")" class="btn btn-sm btn-primary" style="margin-right:5px!important;">
            <i class="fas fa-plus me-1"></i>Add New Product
        </a>
        
        <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#addProductModal">
            <i class="fas fa-plus me-1"></i>Quick Add
        </button>
    </div>
</div>

<!-- Filter and Search -->

<!-- Products Table -->
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Products List</h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>Image</th>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Stock</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var product in Model)
                        {
                            <tr>
                                <td>
                                    <img src="@(string.IsNullOrEmpty(product.ImageUrl) ? "/img/product-1.jpg" : product.ImageUrl)" 
                                         alt="@product.Name" 
                                         style="width: 50px; height: 50px; object-fit: cover; border-radius: 5px;">
                                </td>
                                <td>
                                    <strong>@product.Name</strong><br>
                                    <small class="text-muted">SKU: @product.SKU</small>
                                </td>
                                
                                <td>$@product.Price.ToString("F2")</td>
                                <td>
                                    <span class="badge @(GetStockBadgeClass(product.StockQuantity))">@product.StockQuantity units</span>
                                </td>
                                <td>
                                    <span class="badge @(product.IsActive ? "bg-success" : "bg-secondary")">@(product.IsActive ? "Active" : "Inactive")</span>
                                </td>
                                <td>
                                    <button class="btn btn-sm btn-primary" title="Edit" onclick="editProduct(@product.Id)">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-sm btn-info" title="View" onclick="viewProduct(@product.Id)">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <form asp-action="DeleteProduct" method="post" style="display: inline;" onsubmit="return confirm('Are you sure you want to delete this product?');">
                                        <input type="hidden" name="id" value="@product.Id" />
                                        <button type="submit" class="btn btn-sm btn-danger" title="Delete">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" class="text-center py-4">
                                <i class="fas fa-leaf fa-3x text-muted mb-3"></i>
                                <h5 class="text-muted">No products found</h5>
                                <p class="text-muted">Start by adding your first product!</p>
                                <a href="@Url.Action("AddProduct")" class="btn btn-primary">
                                    <i class="fas fa-plus me-1"></i>Add Product
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        
        <!-- Pagination -->
    </div>
</div>

<!-- Add Product Modal -->
<div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addProductModalLabel">
                    <i class="fas fa-plus me-2"></i>Add New Product
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="quickAddForm" action="@Url.Action("CreateProduct")" method="post" enctype="multipart/form-data">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="Name" class="form-label">Product Name</label>
                                <input type="text" class="form-control" id="Name" name="Name" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="SKU" class="form-label">SKU</label>
                                <input type="text" class="form-control" id="SKU" name="SKU" required>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="Category" class="form-label">Category</label>
                                <select class="form-select" id="Category" name="Category" required>
                                    <option value="">Select Category</option>
                                    <option value="Green Tea">Green Tea</option>
                                    <option value="Black Tea">Black Tea</option>
                                    <option value="Herbal Tea">Herbal Tea</option>
                                    <option value="Organic Tea">Organic Tea</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="Price" class="form-label">Price ($)</label>
                                <input type="number" class="form-control" id="Price" name="Price" step="0.01" required>
                            </div>
                        </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="StockQuantity" class="form-label">Stock Quantity</label>
                                <input type="number" class="form-control" id="StockQuantity" name="StockQuantity" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="IsActive" class="form-label">Status</label>
                                <select class="form-select" id="IsActive" name="IsActive">
                                    <option value="true">Active</option>
                                    <option value="false">Inactive</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="Description" class="form-label">Description</label>
                        <textarea class="form-control" id="Description" name="Description" rows="3"></textarea>
                    </div>
                    
                    <div class="mb-3">
                        <label for="productImage" class="form-label">Product Image</label>
                        <input type="file" class="form-control" id="productImage" name="productImage" accept="image/*">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" form="quickAddForm" class="btn btn-primary">
                    <i class="fas fa-save me-1"></i>Save Product
                </button>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetCategoryBadgeClass(string category)
    {
        return category?.ToLower() switch
        {
            "green tea" => "bg-success",
            "black tea" => "bg-dark",
            "herbal tea" => "bg-info",
            "organic tea" => "bg-primary",
            "white tea" => "bg-light text-dark",
            "oolong tea" => "bg-warning",
            _ => "bg-secondary"
        };
    }

    public string GetStockBadgeClass(int stock)
    {
        return stock switch
        {
            <= 5 => "bg-danger",
            <= 15 => "bg-warning",
            _ => "bg-info"
        };
    }
}

@section Scripts {
    <script>
        // Auto-generate SKU for quick add modal
        document.getElementById('Name').addEventListener('input', function(e) {
            const name = e.target.value;
            const sku = name.toUpperCase().replace(/[^A-Z0-9]/g, '').substring(0, 8);
            if (sku && !document.getElementById('SKU').value) {
                document.getElementById('SKU').value = sku + '-' + Math.floor(Math.random() * 1000);
            }
        });

        // Edit product function
        function editProduct(id) {
            window.location.href = '@Url.Action("EditProduct", "Admin")?id=' + id;
        }

        // View product function
        function viewProduct(id) {
            window.location.href = '@Url.Action("ViewProduct", "Admin")?id=' + id;
        }

        // Form validation for quick add
        document.getElementById('quickAddForm').addEventListener('submit', function(e) {
            const requiredFields = ['Name', 'SKU', 'Category', 'Price', 'StockQuantity'];
            let isValid = true;

            requiredFields.forEach(field => {
                const input = document.getElementById(field);
                if (!input.value.trim()) {
                    isValid = false;
                    input.classList.add('is-invalid');
                } else {
                    input.classList.remove('is-invalid');
                }
            });

            if (!isValid) {
                e.preventDefault();
                alert('Please fill in all required fields.');
            }
        });

        // Clear modal form when closed
        document.getElementById('addProductModal').addEventListener('hidden.bs.modal', function () {
            document.getElementById('quickAddForm').reset();
            document.querySelectorAll('.is-invalid').forEach(el => el.classList.remove('is-invalid'));
        });
    </script>
}
