@model IEnumerable<MvcHer.Models.Order>
@{
    ViewData["Title"] = "Orders Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    /* Responsive Orders Styles */
    @@media (max-width: 991.98px) {
        .card-header .d-flex {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
        }
        
        .btn-group {
            width: 100%;
        }
        
        .btn-group .btn {
            flex: 1;
        }
    }
    
    @@media (max-width: 767.98px) {
        .row.mb-3 .col-md-3,
        .row.mb-3 .col-md-4,
        .row.mb-3 .col-md-2 {
            margin-bottom: 1rem;
        }
        
        .table-responsive {
            font-size: 0.875rem;
        }
        
        .table th, .table td {
            padding: 0.5rem 0.25rem;
        }
        
        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
        }
        
        .h4 {
            font-size: 1.25rem;
        }
    }
    
    @@media (max-width: 575.98px) {
        .card-body {
            padding: 1rem;
        }
        
        .table-responsive {
            font-size: 0.8rem;
        }
        
        .table th, .table td {
            padding: 0.375rem 0.125rem;
        }
        
        .btn-sm {
            padding: 0.2rem 0.4rem;
            font-size: 0.7rem;
        }
        
        .form-select, .form-control {
            font-size: 0.875rem;
            padding: 0.375rem 0.75rem;
        }
        
        .btn {
            font-size: 0.875rem;
            padding: 0.375rem 0.75rem;
        }
    }
    
    /* Filter row responsive */
    .filter-row {
        margin-bottom: 1.5rem;
    }
    
    @@media (max-width: 767.98px) {
        .filter-row .col-md-3,
        .filter-row .col-md-4,
        .filter-row .col-md-2 {
            margin-bottom: 0.75rem;
        }
    }
    
    /* Table responsive improvements */
    .table-responsive {
        border-radius: 0.375rem;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }
    
    /* Status badges responsive */
    .badge {
        font-size: 0.75rem;
        padding: 0.375rem 0.75rem;
    }
    
    @@media (max-width: 575.98px) {
        .badge {
            font-size: 0.7rem;
            padding: 0.25rem 0.5rem;
        }
    }
    
    /* Action buttons responsive */
    .action-buttons {
        display: flex;
        gap: 0.25rem;
        flex-wrap: wrap;
    }
    
    @@media (max-width: 575.98px) {
        .action-buttons {
            flex-direction: column;
            gap: 0.125rem;
        }
        
        .action-buttons .btn {
            width: 100%;
            margin: 0;
        }
    }
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="mb-0"><i class="fas fa-shopping-cart me-2"></i>Orders Management</h4>
                    <div class="btn-group">
                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="refreshOrders()">
                            <i class="fas fa-sync-alt me-1"></i>Refresh
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show">
                            <i class="fas fa-check-circle me-2"></i>@TempData["Success"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show">
                            <i class="fas fa-exclamation-triangle me-2"></i>@TempData["Error"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    <!-- Filters -->
                    <div class="row mb-3">
                        <div class="col-md-3">
                            <select class="form-select" id="statusFilter" onchange="filterOrders()">
                                <option value="">All Status</option>
                                <option value="Pending">Pending</option>
                                <option value="Processing">Processing</option>
                                <option value="Shipped">Shipped</option>
                                <option value="Delivered">Delivered</option>
                                <option value="Cancelled">Cancelled</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <input type="date" class="form-control" id="dateFilter" onchange="filterOrders()" placeholder="Filter by date">
                        </div>
                        <div class="col-md-4">
                            <input type="text" class="form-control" id="searchFilter" placeholder="Search by order number or customer..." onkeyup="filterOrders()">
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-outline-secondary w-100" onclick="clearFilters()">
                                <i class="fas fa-times me-1"></i>Clear
                            </button>
                        </div>
                    </div>

                    @if (Model != null && Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover" id="ordersTable">
                                <thead class="table-light">
                                    <tr>
                                        <th>Order #</th>
                                        <th>Customer</th>
                                        <th>Date</th>
                                        <th>Items</th>
                                        <th>Total</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var order in Model.OrderByDescending(o => o.OrderDate))
                                    {
                                        <tr data-order-id="@order.Id" data-status="@order.Status" data-date="@order.OrderDate.ToString("yyyy-MM-dd")" data-customer="@order.Customer.FirstName @order.Customer.LastName" data-order-number="@order.OrderNumber">
                                            <td>
                                                <strong>@order.OrderNumber</strong>
                                                <br>
                                                <small class="text-muted">ID: @order.Id</small>
                                            </td>
                                            <td>
                                                <div>
                                                    <strong>@order.Customer.FirstName @order.Customer.LastName</strong>
                                                    <br>
                                                    <small class="text-muted">@order.Customer.Email</small>
                                                </div>
                                            </td>
                                            <td>
                                                <div>
                                                    @order.OrderDate.ToString("MMM dd, yyyy")
                                                    <br>
                                                    <small class="text-muted">@order.OrderDate.ToString("hh:mm tt")</small>
                                                </div>
                                            </td>
                                            <td>
                                                <span class="badge bg-info">@order.OrderItems.Count items</span>
                                            </td>
                                            <td>
                                                <strong class="text-success">$@order.TotalAmount.ToString("F2")</strong>
                                            </td>
                                            <td>
                                                <select class="form-select form-select-sm status-select" data-order-id="@order.Id" onchange="updateOrderStatus(@order.Id, this.value)">
                                                    @if (order.Status == "Pending")
                                                    {
                                                        <option value="Pending" selected>Pending</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="Pending">Pending</option>
                                                    }
                                                    @if (order.Status == "Processing")
                                                    {
                                                        <option value="Processing" selected>Processing</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="Processing">Processing</option>
                                                    }
                                                    @if (order.Status == "Shipped")
                                                    {
                                                        <option value="Shipped" selected>Shipped</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="Shipped">Shipped</option>
                                                    }
                                                    @if (order.Status == "Delivered")
                                                    {
                                                        <option value="Delivered" selected>Delivered</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="Delivered">Delivered</option>
                                                    }
                                                    @if (order.Status == "Cancelled")
                                                    {
                                                        <option value="Cancelled" selected>Cancelled</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="Cancelled">Cancelled</option>
                                                    }
                                                </select>
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm">
                                                    <button type="button" class="btn btn-outline-primary" onclick="viewOrderDetails(@order.Id)" title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                    <button type="button" class="btn btn-outline-info" onclick="printOrder(@order.Id)" title="Print">
                                                        <i class="fas fa-print"></i>
                                                    </button>
                                                    <button type="button" class="btn btn-outline-danger" onclick="deleteOrder(@order.Id)" title="Delete">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Order Statistics -->
                        <div class="row mt-4">
                            <div class="col-md-3">
                                <div class="card bg-primary text-white">
                                    <div class="card-body text-center">
                                        <h5>@Model.Count()</h5>
                                        <p class="mb-0">Total Orders</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card bg-warning text-white">
                                    <div class="card-body text-center">
                                        <h5>@Model.Count(o => o.Status == "Pending")</h5>
                                        <p class="mb-0">Pending Orders</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card bg-success text-white">
                                    <div class="card-body text-center">
                                        <h5>@Model.Count(o => o.Status == "Delivered")</h5>
                                        <p class="mb-0">Delivered Orders</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card bg-info text-white">
                                    <div class="card-body text-center">
                                        <h5>$@Model.Sum(o => o.TotalAmount).ToString("F2")</h5>
                                        <p class="mb-0">Total Revenue</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-shopping-cart fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No Orders Found</h5>
                            <p class="text-muted">Orders will appear here once customers start placing orders.</p>
                            <a href="@Url.Action("Index", "Home")" class="btn btn-primary">
                                <i class="fas fa-home me-2"></i>Go to Store
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Order Details Modal -->
<div class="modal fade" id="orderDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Order Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="orderDetailsContent">
                <!-- Order details will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="printCurrentOrder()">
                    <i class="fas fa-print me-2"></i>Print
                </button>
            </div>
        </div>
    </div>
</div>

<script>
function filterOrders() {
    const statusFilter = document.getElementById('statusFilter').value.toLowerCase();
    const dateFilter = document.getElementById('dateFilter').value;
    const searchFilter = document.getElementById('searchFilter').value.toLowerCase();
    const table = document.getElementById('ordersTable');
    const rows = table.getElementsByTagName('tr');

    for (let i = 1; i < rows.length; i++) {
        const row = rows[i];
        const status = row.getAttribute('data-status').toLowerCase();
        const date = row.getAttribute('data-date');
        const customer = row.getAttribute('data-customer').toLowerCase();
        const orderNumber = row.getAttribute('data-order-number').toLowerCase();

        let showRow = true;

        // Status filter
        if (statusFilter && !status.includes(statusFilter)) {
            showRow = false;
        }

        // Date filter
        if (dateFilter && date !== dateFilter) {
            showRow = false;
        }

        // Search filter
        if (searchFilter && !customer.includes(searchFilter) && !orderNumber.includes(searchFilter)) {
            showRow = false;
        }

        row.style.display = showRow ? '' : 'none';
    }
}

function clearFilters() {
    document.getElementById('statusFilter').value = '';
    document.getElementById('dateFilter').value = '';
    document.getElementById('searchFilter').value = '';
    filterOrders();
}

function updateOrderStatus(orderId, newStatus) {
    $.ajax({
        url: '@Url.Action("UpdateStatus", "Order")',
        type: 'POST',
        data: {
            orderId: orderId,
            status: newStatus
        },
        success: function(response) {
            if (response.success) {
                showNotification('success', 'Order status updated successfully');
            } else {
                showNotification('error', response.message || 'Failed to update order status');
            }
        },
        error: function() {
            showNotification('error', 'Error updating order status');
        }
    });
}

function viewOrderDetails(orderId) {
    $.get('@Url.Action("Details", "Order")/' + orderId)
        .done(function(html) {
            $('#orderDetailsContent').html(html);
            var modal = new bootstrap.Modal(document.getElementById('orderDetailsModal'));
            modal.show();
        })
        .fail(function() {
            showNotification('error', 'Failed to load order details');
        });
}

function printOrder(orderId) {
    window.open('@Url.Action("Print", "Order")/' + orderId, '_blank');
}

function deleteOrder(orderId) {
    if (confirm('Are you sure you want to delete this order? This action cannot be undone.')) {
        $.ajax({
            url: '@Url.Action("Delete", "Order")/' + orderId,
            type: 'DELETE',
            success: function(response) {
                if (response.success) {
                    showNotification('success', 'Order deleted successfully');
                    location.reload();
                } else {
                    showNotification('error', response.message || 'Failed to delete order');
                }
            },
            error: function() {
                showNotification('error', 'Error deleting order');
            }
        });
    }
}

function refreshOrders() {
    location.reload();
}

// Export removed per request

function showNotification(type, message) {
    const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
    const icon = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-triangle';
    
    const alert = `
        <div class="alert ${alertClass} alert-dismissible fade show">
            <i class="fas ${icon} me-2"></i>${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    `;
    
    $('.card-body').prepend(alert);
    
    // Auto-dismiss after 5 seconds
    setTimeout(function() {
        $('.alert').fadeOut();
    }, 5000);
}
</script>
